name: Deploy a stage

on:
  workflow_call:
    inputs:
      deployment_stage:
        required: true
        type: string

env:
  pulumi_stack_organization: virtualfinland
  aws_region: eu-north-1
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

jobs:
  build:
    uses: Virtual-Finland-Development/access-finland/.github/workflows/build-and-test.yml@main
    with:
      deployment_stage: ${{ inputs.deployment_stage }}
      wants_artifacts: true
    secrets: inherit
  deploy:
    name: Deployment
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Download the built artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact-${{ inputs.deployment_stage }}
          path: ./out
      - name: Display structure of downloaded artifact files
        run: |
          ls -R out
      - name: Configure AWS credentials
        uses: Virtual-Finland-Development/infrastructure/.github/actions/configure-aws-credentials@main
        with:
          environment: ${{ inputs.deployment_stage }}
          aws-region: ${{ secrets.AWS_REGION }}
          pulumi-access-token: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - name: Install Pulumi CLI
        uses: pulumi/actions@v4
      - name: Install dependencies
        working-directory: ./infra/vf-features
        run: npm ci && npm run build
      - name: Select Pulumi stack
        working-directory: ./infra/vf-features
        run: pulumi stack select ${{ env.pulumi_stack_organization }}/${{ inputs.deployment_stage }} --create
      - name: Set artifact path in Pulumi config
        working-directory: ./infra/vf-features
        run: pulumi config set artifactPath ../../out
      - name: Deploy with Pulumi
        uses: pulumi/actions@v4
        with:
          work-dir: ./infra/vf-features
          command: up
          stack-name: ${{ env.pulumi_stack_organization }}/${{ inputs.deployment_stage }}
          upsert: true # create stack if no exists
      - name: Tag the deployment
        uses: Virtual-Finland-Development/automatic-release-action@v1.0
        if: ${{ inputs.deployment_stage == 'staging' }}
        with:
          environment: ${{ inputs.deployment_stage }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
